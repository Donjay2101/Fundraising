@model IEnumerable<FundRaising.ViewModels.StudentOrderViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Student Orders";
}


<script>

    function getOrders(ID)
    {
        window.location.href = "/Distributor/OrderDetails/"+ID;
    }
</script>


<div style="padding-bottom: 8px;">
    <a href="#" onclick="goBack();" class="linkbtn text-center" >Back</a>
</div>

<div>
    @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        <a href="#" onclick="getOrders(@c.OrderID)" class="modal-link">@c.OrderID</a>
                    </b>
                </div>).Titled("Order ID");
                        //columns.Add(c => c.OrderID).Titled("Order ID");
                        columns.Add(c => c.FirstName).Titled("First Name").Filterable(true);
                        columns.Add(c => c.LastName).Titled("Last Name").Filterable(true);
                        columns.Add(c => c.createdDate).Titled("Created Date");
                        columns.Add(c => c.ProductTotal).Titled("Order Total").Format("{0:C}");
                        columns.Add(c => c.Items).Titled("Items Count");

                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()

</div>
