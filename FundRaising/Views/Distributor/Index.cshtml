@model IEnumerable<FundRaising.Models.RegisterModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Distributors";
}


<script>

    function Deleteconfirm(id, name) {
        var d = confirm("Are you sure you want delete the Distributor with Name: " + name);
        if (d) {
            Delete(id, 'Distributor');
        }
    }
</script>

<p>
    @Html.ActionLink("Create New", "Create", "Distributor")
</p>

@Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        @Html.ActionLink("Edit", "Edit", new { id = c.userID }, new { @class = "modal_link" })
                    </b>
                </div>);


                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                    @<div id="balloon" class="balloonClass">
                                        <b>
                                           <a href="#" onclick="Deleteconfirm('@c.userID','@c.UserName')">Delete</a>
                                        </b>
                                    </div>);
                       
                        columns.Add(c => c.UserName).Titled("Name");
                        columns.Add(c => c.EmailAddress).Titled("Email Address");
                        columns.Add(c => c.CompanyName).Titled("Company");
                        columns.Add(c => c.City).Titled("City");
                        columns.Add(c => c.State).Titled("State");
                        columns.Add(c => c.Enabled).Titled("Enabled");
                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()




