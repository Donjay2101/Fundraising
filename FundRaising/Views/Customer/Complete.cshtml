@model FundRaising.Models.Order

@{
    ViewBag.Title = "Complete";
    Layout = "~/Views/Customer/_Layout.cshtml";
}



<style>
    .display-label {
        color: #8C8786;
        font-weight: 900;
           
    }

    .display-field {
        background-color: white;
        font-weight: 500;
    }

    .error {
        font-size: 18px;
    }
</style>
<script>
    function gotoPage() {
        window.location.href = '/customer/checkout?option=1';
    }
</script>
<div class="row card-parment-padding  payment">
    <form action="Complete" method="post" onsubmit=" return checkCoupon()">
    <div class="row text-right">
        <div class="col-md-offset-8 col-md-4 col-sm-offset-8 col-sm-4 text-center">
            <input type="button" style="width: 95px; height: 29px; line-height: 1;" class="btnCls" value="EDIT" onclick="gotoPage()" />
        </div>       
    </div>


    <div class="row" class="card-parment-padding">

        <div class="col-md-12 col-sm-12 col-xs-12">
            @if (ViewBag.SchoolName != null)
            {

                <div class="row no-margin">
                    <div class="display-label">
                        School Name
                    </div>
                    <div class="display-field">
                        <span id="EmailAddress">
                            @ViewBag.SchoolName
                        </span>

                    </div>
                </div>
               
            }

            <div class="row no-margin">
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.FirstName)
                </div>
                <div class="display-field">
                    <span id="FirstName">
                        @Html.DisplayFor(model => model.FirstName)
                    </span>

                </div>
            </div>
            <div class="row no-margin">
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.LastName)
                </div>
                <div class="display-field">
                    <span id="LastName">
                        @Html.DisplayFor(model => model.LastName)
                    </span>
                </div>
            </div>
            <div class="row no-margin">
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </div>
                <div class="display-field">
                    @Html.DisplayFor(model => model.PhoneNumber)
                </div>
            </div>
            <div class="row no-margin">
                <div class="display-label">
                    @Html.DisplayNameFor(model => model.EmailAddress)
                </div>
                <div class="display-field">
                    <span id="EmailAddress">
                        @Html.DisplayFor(model => model.EmailAddress)
                    </span>

                </div>
            </div>
        </div>
        </div>
        <div class="row card-parment-padding" >
            <div class="col-md-6">
                <fieldset>
                    <legend class="order" >Shipping Address:</legend>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SCountry)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.SCountry)
                        </div>
                    </div>
                    @*<div class="display-label">
                        @Html.DisplayNameFor(model => model.SCompanyName)
                    </div>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.SCompanyName)
                    </div>*@
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SAddress1)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.SAddress1)
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.SAddress2))
                    {
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SAddress2)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.SAddress2)
                        </div>
                    </div>
                    }

                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SCity)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.SCity)
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SState)
                        </div>
                        <div class="display-field">
                            @*@Html.DropDownList("SState","select--")*@
                            @Html.DisplayFor(model => model.SState)
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.SPostalCode)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.SPostalCode)
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="col-md-6">
                <fieldset>
                    <legend class="order" >Billing Address:</legend>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.Country)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Country)
                        </div>
                    </div>
                    @*<div class="display-label">
                        @Html.DisplayNameFor(model => model.CompanyName)
                    </div>
                    <div class="display-field">
                        @Html.DisplayFor(model => model.CompanyName)
                    </div>*@
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.Address1)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Address1)
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Address2))
                    {
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.Address2)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Address2)
                        </div>
                    </div>
                    }
                    <div class="row no-margin">

                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.City)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.City)
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.State)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.State)
                        </div>
                    </div>
                    <div class="row no-margin">
                        <div class="display-label">
                            @Html.DisplayNameFor(model => model.PostalCode)
                        </div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.PostalCode)
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="space"></div>
        </div>

    <div class="row card-parment-padding">
        <div class="col-md-12 col-sm-12 col-xs-12">
            @if (ViewBag.OrderList != null)
            {

                Html.RenderPartial("_OrderDetails", (List<FundRaising.Models.Cart>)ViewBag.OrderList);

            }
        </div>
      

    </div>


        <div id="overlayw" style="display:none; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(128, 128, 128, 0.52);z-index: 99999;position: fixed;">



            @*<form action="Brochure/mapping" method="post">*@


            <div id='Containerw' style="width: 50%;text-align: center;position: absolute;top: 43%;left: 26%;">
                <img src='/Images/wait.gif' style='width: 60px;'>
            </div>

            @*</form>*@
        </div>



    </form>
</div>
<script>
    $(document).ready(function () {

        debugger;
        var studentID = readCookie('StudentID');
        if (studentID == '50000') {
            htmlstring = '<div style="margin-bottom:5%"><span style="color:black;font-weight:800">do you have coupon?</span><input type="text" id="txtcoupon" style=" height: 31px;" /> <input type="button" id="couponbtn" class="btnCls" style="padding: 6px;border: none;width:26%" value="Apply Coupon" /></div>';
            $('#coupon').html(htmlstring);
        }
        else {

            //$('#coupon').html(numeral(cpnvalue).format('$0,0.00'));
        }
        debugger;
        var cpnvalue = sessionStorage.getItem('CouponAmount');
        var total = sessionStorage.getItem('TotalAmount');

        $('#cpnValue').html(numeral(cpnvalue).format('$0,0.00'));
        if (total != null) {
            $('#totalpay').html(numeral(total).format('$0,0.00'));
        }


        $('#cpnValue').html();
        var curDate = new Date();
        var curYear = parseInt(curDate.getFullYear());
        htmlString = "";
        for (i = 0; i < 20; i++) {
            htmlString += "<option value=" + curYear + ">" + curYear + "</option>";
            curYear += 1;
        }

        $('#optYear').html(htmlString);





        $('#couponbtn').click(function () {
            var couponcode = $('#txtcoupon').val();
            var code = sessionStorage.getItem("Code");
            if (code != null && couponcode == code) {
                alert('coupon already applied');
                return;
            }
            var firstName = $('#FirstName').html();
            var lastName = $('#LastName').html();
            Name = firstName + "-" + lastName;
            var EmailAddress = $('#EmailAddress').html();
            if (couponcode == '' || couponcode == undefined) {
                alert('coupon Code required');
                return;
            }

            //var htmlString = "";
            //// alert('hello');
            //$('#Containerw').html(htmlString);
            $('#overlayw').css('display', 'block');

            $.ajax({
                url: '/Customer/ApplyCoupon/',
                data: { code: couponcode, Name: Name, EmailAddress: EmailAddress },
                success: function (data) {
                    debugger;
                    if (data != null && data != '-1' && data != '0') {
                        sessionStorage.setItem("Code", couponcode);
                        cpnValue = parseInt(data);
                        data = numeral(data).format('$0,0.00');
                        $('#cpnValue').html(data);
                        var total = $('#totlamt').html();
                        // $('#totalpay').val(total);
                        $('#cpnchk').css('display', 'block');
                        total = total.replace('$', '');
                        var total = parseInt(total);
                        diff = total - cpnValue;
                        if (diff > 0) {
                            diff = numeral(diff).format('$0,0.00');
                            $('#totalpay').html(diff);
                        }
                        else {
                            diff = 0;
                            $('#CardDetails').css('display', 'none');
                        }
                        sessionStorage.setItem('CouponCode', couponcode);
                        sessionStorage.setItem('CouponAmount', cpnValue);
                        sessionStorage.setItem('TotalAmount', diff);
                    }
                    else if (data == "-1") {
                        alert('Cannot apply coupon. coupon has been already used.');
                        sessionStorage.removeItem("Code");
                    }
                    else {
                        alert('Coupon code not found in our system.');
                    }
                    $('#overlayw').css('display', 'none');
                    //workgin with coupon data
                },
                error: function (response) {
                    console.log(response);
                    //$('#Containerw').html(htmlString);
                    $('#overlayw').css('display', 'none');
                }

            });

        });

    });
    function checkCoupon() {
        var cpnvalue = sessionStorage.getItem('CouponCode');
        if (cpnvalue != null) {
            createCookie('Coupon', cpnvalue);
        }
        var cardType = $('#paymentMethod').val();
        var count = 0;
        if (check(cardType) || cardType == 0) {
            $('#CardTypes').css('display', 'block');
            count = 1;
        }

        var cardType = $('#txtcardNum').val();
        if (check(cardType)) {
            $('#txtcardNums').css('display', 'block');
            count = 1
        }

        var cardType = $('#txtcardName').val();
        if (check(cardType)) {
            $('#txtcardNames').css('display', 'block');
            count = 1
        }

        var cardType = $('#optDate').val();
        if (check(cardType)) {
            $('#optDates').css('display', 'block');
            count = 1
        }

        var cardType = $('#optYear').val();
        if (check(cardType)) {
            $('#optYears').css('display', 'block');
            count = 1
        }

        var cardType = $('#txtCode').val();
        if (check(cardType)) {
            $('#txtCodes').css('display', 'block');
            count = 1;
        }
        if (count == 0) {
            return true;
        }
        else {
            return false;
        }


    }


    function check(elem) {
        if (elem == undefined || elem == "") {
            return true;
        }
        else {
            return false;
        }
    }
    //$(window).on()


</script>


@*<p>
        @Html.ActionLink("Edit", "Edit", new { id=Model.ID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
