@model IEnumerable<FundRaising.Models.Category>
@using GridMvc.Html
@{
    ViewBag.Title = "Categories";
}

<script>

    function Deleteconfirm(id, name) {
        var d = confirm("Are you sure you want delete the Category with Name: " + name);
        if (d) {
            Delete(id, 'Category');
        }
    }
</script>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div id="overlay" style="display: none; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(128, 128, 128, 0.52);z-index: 99999;position: fixed;"></div>

@Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
          .Encoded(false)
          .Sanitized(false)
          .SetWidth(70)
          .Css("hidden-xs") //hide on phones
          .RenderValueAs(c =>
            @<div id="balloon" class="balloonClass">
                <b>

                    <a href="#" name="copytoNew" onclick="CopytoNew('@c.ID','1')">Copy</a>
                </b>
            </div>);
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        @Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link" })
                    </b>
                </div>);
    
    
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                    @<b>
                                     <a href="#" onclick="Deleteconfirm('@c.ID','@c.CategoryName')">Delete</a>      
                                        </b>);
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(100)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                    @<div id="balloon" class="balloonClass">
                                        <b>
                                            <a href="#" onclick="ShowToolTipImage(event,'@c.Image',1)" onmouseover="ShowToolTipImage(event,'@c.Image',0)" onmouseout="HideTooTipImage()" onmousemove="MoveToolTipImage(event)" style="cursor: pointer">View Image</a>
                                            @*<a href="#" onlclick="openImage('@c.Image')">View Image</a>*@
                                            @*<img src="" alt="NO Image" style="width:200px;height:200px;" />*@
                                            @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link" })*@
                                        </b>
                                    </div>);
                        columns.Add(c => c.CategoryID).Titled("Category ID");
                        columns.Add(c => c.CategoryName).Titled("Category Name");
                        columns.Add(c => c.productsCount).Titled("No. of Products");
                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()




@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Image)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CategoryName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Image)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>*@
