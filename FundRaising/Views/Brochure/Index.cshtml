@model IEnumerable<FundRaising.Models.Brochure>
@using GridMvc.Html
@{
    ViewBag.Title = "Brochures";
}

<script>

    function Deleteconfirm(id,name) {
        var d = confirm("Are you sure you want delete the Brochure with Brochure ID: " + name);
        if (d) {
            Delete(id,'Brochure');
        }
    }

    function CopyBrochure(ID)
    {
        var htmlString="<div class='row'><div class='col-md-6'>  <span>Copy to existing brochure <input type='radio' value='"+ID+"' id='r1' class='rad1' name='r1' ></div>  <div class='col-md-6'>Copy to new brochure <input type='radio' value='"+ID+"' class='rad1' id='r2' name='r1' ></div> </div>";
        //$("#overlayw").append(htmlString);
        $("#Containerw").html(htmlString);
        $("#Containerw").removeAttr('class');
        $("#Containerw").attr('class', 'container1');
        $("#closed").attr('class', 'closed1');
        $("#overlayw").css("display", "block");
    }


    $(document).on('click','.rad1',function(){
        var elem_ID=$(this).attr('ID');
        if(elem_ID=='r1')
        {
            var val=$(this).attr('value');
          //  alert(val);
            getBrochures(1,val);
        }
        else
        {
            var val=$(this).attr('value');
            //alert(val);
            
            getBrochures(2,val);
        }
    });

</script>

<p>
    <a href="#" onclick="gotoPrevious('/Brochure/Create')">Create New</a>
    @*@Html.ActionLink("Create New", "Create")*@
</p>

<div id="BrochureContainer" style="width:100%">

    @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        <a href="#" onclick="getBrochures('1',@c.ID)" class="modal-link">Copy</a>
                    </b>
                </div>);

                     
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        @Html.ActionLink("Edit", "Edit","Brochure", new { id = c.ID }, new { @class = "modal_link" })
                    </b>
                </div>);
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                    @<div id="balloon" class="balloonClass">
                                        <b>
                                            <a href="#" onclick="Deleteconfirm('@c.ID','@c.BrochureID')">Delete</a>
                                            @*@Html.ActionLink("Delete", "Delete", new { id = c.ID }, new { @class = "modal_link" })*@
                                        </b>
                                    </div>);
                        columns.Add(c => c.BrochureID).Titled("Brochure ID");
                        columns.Add(c => c.BrochureName).Titled("Name").Filterable(true);
                       // columns.Add(c => c.Description).Titled("Description");
                        columns.Add(c => c.productsCount).Titled("No. of Products");

                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()


</div>


<div id="CategoryContainer">

</div>




@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.products)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.products)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>*@
