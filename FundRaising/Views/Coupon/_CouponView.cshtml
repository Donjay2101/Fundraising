@model IEnumerable<FundRaising.ViewModels.CouponViewModel>
@using GridMvc.Html

@Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
                @<div id="balloon" class="balloonClass">
                    <b>
                        @Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })
                    </b>
                </div>);
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                    @<div id="balloon" class="balloonClass">
                                        <b>
                                            <a href="#" onclick="Deleteconfirm('@c.ID')">Delete</a>
                                        </b>
                                    </div>);
                        columns.Add(c => c.Code).Titled("Coupon code");
                        //columns.Add(c => c.CouponType).Titled("Coupon type");
                        columns.Add(c => c.CouponUsage).Titled("Coupon usage");
                        columns.Add(c => c.value).Titled("Coupon value").Format("{0:c}");
                        columns.Add(c => c.StartDate).Titled("Start Date").Format("{0:MM/dd/yyyy}");
                        columns.Add(c => c.EndDate).Titled("End Date").Format("{0:MM/dd/yyyy}");
                        columns.Add(c => c.Description).Titled("Description");



                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()

